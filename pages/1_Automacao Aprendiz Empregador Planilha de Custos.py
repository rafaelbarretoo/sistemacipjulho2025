import streamlit as st
import pandas as pd
import os
from PIL import Image

# Configura√ß√£o da p√°gina com layout mais amplo
st.set_page_config(
    page_title="Automa√ß√£o Contrato Aprendiz Empregador - Planilha de custos", 
    page_icon="üìä",
    layout="wide"
)

def calcular_media(notas, pesos):
    return sum(n * p for n, p in zip(notas, pesos))

# ESTILOS E CSS CUSTOMIZADO
st.markdown("""
    <style>
        /* Estilos gerais */
        .stApp {
            background-color: #f8f9fa;
        }
        
        /* Cabe√ßalhos */
        .main-header {
            color: #4B0082;
            text-align: center;
            padding: 1rem;
            border-bottom: 2px solid #4B0082;
            margin-bottom: 2rem;
        }
        
        /* Cards */
        .custom-card {
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background: white;
            border-left: 4px solid #4B0082;
        }
        
        /* Sliders */
        .stSlider {
            margin-bottom: 1.5rem;
        }
        
        /* Bot√µes */
        .stButton>button {
            background-color: #4B0082;
            color: white;
            border-radius: 5px;
            padding: 0.5rem 1rem;
            margin-top: 1rem;
        }
        
        /* Expanders */
        .stExpander {
            margin-bottom: 1rem;
        }
        
        /* M√©tricas */
        .stMetric {
            border-radius: 5px;
            padding: 1rem;
            background: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
""", unsafe_allow_html=True)

# CABE√áALHO

# Imagem de cabe√ßalho
image = Image.open('headerav.png')
st.image(image, use_container_width=True)

# T√≠tulo principal (Nome e informa√ß√µes do projeto)
st.markdown("""
    <div class="main-header">
        <h1 style='margin:0;'>Projeto - Automa√ß√£o de Contratos Aprendiz Empregador - Planilha de Custos </h1> 
        <p style='margin:0; font-size:1.1rem;'>SUPEX - Ger√™ncia Jur√≠dica e Compliance e DPO - Supervis√£o de Administra√ß√£o de Contratos
 - Fabr√≠cio Canonaco</p>
    </div>
""", unsafe_allow_html=True)

# SE√á√ÉO DE INFORMA√á√ïES DO PROJETO

col1, col2, = st.columns([1, 1])

with col1:
    with st.expander("üß± **Problema Identificado**", expanded=False):
        st.markdown("""
            A gera√ß√£o da Planilha de custos busca corrigir o atualmente truncado/ultrapassado fluxo de informa√ß√µes para subsidiar as negocia√ß√µes do Atendimento, ao fornecer uma vis√£o detalhada e transparente dos custos envolvidos nos programas de est√°gio e aprendizagem, **com emiss√£o autom√°tica de planilhas por meio do Kair√≥s**.  Atualmente, a elabora√ß√£o da planilha de custos √© um processo manual, realizado via Excel por cada unidade, e que demanda valida√ß√£o da AIJ e da Gest√£o do Aprendiz. Isso significa que o tempo e os recursos despendidos n√£o se limitam √† equipe que preenche, mas se estendem a, no m√≠nimo, mais duas √°reas que precisam validar cada documento. Isso gera intenso trabalho manual e dedica√ß√£o de colaboradores, reduzindo a produtividade das equipes e dificultando maior controle, transpar√™ncia e assertividade das informa√ß√µes fornecidas pelo CIEE que a automatiza√ß√£o poder√° prover.  """)

with col2:
    with st.expander("üí° **Solu√ß√£o Proposta**", expanded=False):
        st.markdown("""
           Remodelagem da interface para emiss√£o da planilha de custos para uma tecnologia mais f√°cil/atual e integrada em nosso sistema "oficial",  o Kair√≥s. A interface busca corrigir o fluxo de informa√ß√µes para subsidiar as negocia√ß√µes do Atendimento, ao fornecer uma vis√£o detalhada e transparente dos custos envolvidos nos programas de est√°gio e aprendizagem, com emiss√£o autom√°tica de planilhas. O novo fluxo, conforme apresentado, reduz trabalho manual e dedica√ß√£o de colaboradores, aumentando a produtividade das equipes e gerando maior controle, transpar√™ncia e assertividade das informa√ß√µes fornecidas pelo CIEE.

A planilha serve para subsidiar as negocia√ß√µes e integram alguns contratos (ex. Adm P√∫blica) fornecendo uma vis√£o detalhada e transparente dos custos envolvidos nos programas de est√°gio e aprendizagem, garantindo que todas as partes possam ter uma compreens√£o clara das despesas envolvidas na rela√ß√£o contratual e de suas respectivas origens. Al√©m do mais, a elabora√ß√£o de planilha de custos √© imprescind√≠vel nas contrata√ß√µes realizadas com a Administra√ß√£o P√∫blica e tamb√©m nas contrata√ß√µes ‚Äúaprendiz empregador 80/20‚Äù (tipo de contrata√ß√£o onde o CIEE recebe antecipadamente um percentual das despesas relativas ao contrato), onde √© parte integrante e indissoci√°vel do contrato. Portanto, a emiss√£o autom√°tica de planilhas por meio da plataforma oficial do CIEE, se faz necess√°ria para o ganho de produtividade das equipes e tamb√©m para um maior controle, transpar√™ncia e assertividade das informa√ß√µes fornecidas pelo CIEE.
A Planilha de Custos poder√° ser emitida em (i) Backoffice Kair√≥s ou no (ii) portal do CIEE quando a empresa estiver realizando sua solicita√ß√£o de contrata√ß√£o. A planilha poder√° ser emitida tanto para o (i) programa de est√°gio quanto para o (ii) programa de aprendizagem. A planilha poder√° ser emitida para (i) negocia√ß√µes em andamento, subsidiando as
tratativas entre √Årea de Atendimento e Parceiro, bem como, para (ii) contratos j√° assinados/cadastrados, subsidiando poss√≠veis renova√ß√µes, atualiza√ß√µes de valores, etc.
Toda a proposta de funcionalidades, fluxos de trabalho e telas, com inputs e outputs necess√°rios, est√° detalhada em documenta√ß√£o completa de requisitos.
- Dispon√≠vel no link: https://drive.google.com/file/d/1Va1GkgddjPPTq9cw84cmUfOm8fjogm-n/view
- Fluxograma To Be: https://drive.google.com/file/d/1KtlkPgT8h4WeQzrSZ7Kb6qU18M26e1Xp/view?usp=sharing
        """)

col3, col4 = st.columns([1, 1])

with col3:
    
    with st.expander("üó∫Ô∏è **Roadmap do Projeto**", expanded=False):
        st.markdown("""
            **In√≠cio do Projeto: Fevereiro/2026** (Conforme Prioriza√ß√£o)
                    
- 1. envolvimento das partes interessadas e kick off - apresenta√ß√£o da proposta aprovada, alinhamentos e desdobramento de tarefas (escopo), prazos preliminares (cronograma) e eventuais custos
- 2. reuni√µes recorrentes da equipe de projeto para an√°lise e ajustes na documenta√ß√£o de requisitos e fluxos
- 3. revis√£o de cronograma e elabora√ß√£o de cronograma final
- 4. prototipa√ß√£o e desenvolvimento (Sistemas) com acompanhamento da equipe do projeto
- 5. testes, ajustes e valida√ß√µes das entregas
- 6. publica√ß√£o e divulga√ß√£o do novo fluxo operacional e sist√™mico (operacionaliza√ß√£o)
- 7. monitoramento da operacionaliza√ß√£o, ajustes/melhorias (se necess√°rios).
- 8. an√°lise dos indicadores propostos e apresenta√ß√£o de resultados
- 9. encerramento do projeto

**Encerramento do Projeto: Setembro/2026**
        """)

with col4:
    with st.expander("üí∞ **Recursos Financeiros Previstos**", expanded=False):
        st.markdown("""
Custo apenas de OPEX relacionado ao tempo de desenvolvido, a ser dimensionado pela Ger√™ncia de Tecnologia
""")

col5, col6 = st.columns([1, 1])
with col5:
    with st.expander("üéØ **Resultados Esperados**", expanded=False):
        st.markdown("""
- 1) Aperfei√ßoamento do processo / fluxo de informa√ß√µes para subsidiar as negocia√ß√µes do Atendimento (Financeiro)
INDICADOR: custo de homem-hora reduzido de 35,63 para 10,48 por planilha = - 71%

- 2) Redu√ß√£o do tempo de atua√ß√£o dos colaboradores para gera√ß√£o da planilha de custos com a automatiza√ß√£o de um processo manual demorado (Processual / Tecnol√≥gico; Produtividade) 
INDICADOR: redu√ß√£o de 85 para 25 minutos de trabalho ativo (homem-hora) por planilha = - 71%

- 3) N√£o perder parceiros por conta de demora na apresenta√ß√£o / aceite de proposta de valor (Financeiro; Marca)
INDICADOR: entrevista qualitativa com consultores de atendimento

- 4) Integrar um processo residual de outros sistemas ao Kair√≥s (Processual / Tecnol√≥gico)
INDICADOR: 0/1 ; feito / n√£o feito

- 5) Criar uma vis√£o mais clara, detalhada e transparente dos custos envolvidos nos programas de est√°gio e aprendizagem (Marca; Processual / Tecnol√≥gico)
INDICADOR: entrevista qualitativa com consultores de atendimento e equipe AIJ

- 6) Maior controle, transpar√™ncia e assertividade das informa√ß√µes fornecidas pelo CIEE (Financeiro; Marca)
INDICADOR: entrevista qualitativa com consultores de atendimento e equipe AIJ

(custo m√©dio por hora de um profissional, que, considerando um sal√°rio de 4.426,00 para uma jornada mensal de 176 horas, resulta em aproximadamente 25,15 por hora)
 """)


with col6:
    with st.expander("ü§ù **√Åreas Envolvidas**", expanded=False):
        st.markdown("""
           - **SUPEX:** Supervis√£o de Administra√ß√£o de Contratos; 
- **SUPEX:** Supervis√£o de Desenvolvimento de Sistemas e Processos de Atendimento; 
- **SUNOA:** Supervis√£o de Gest√£o do Aprendiz; 
- **SUNOA:** Supervis√£o de Administra√ß√£o e Opera√ß√£o Contratos Est√°gio e Aprendiz.
        """)



st.link_button("üìù Acessar Forms do Projeto", "https://docs.google.com/spreadsheets/d/1jLm7QbxAbygEAoIGO_H-fPB5A8rrmzMWix0mJNFSOUc/edit?gid=855947888#gid=855947888",
                  use_container_width=True)


# SE√á√ÉO DE AVALIA√á√ÉO

st.markdown("""
    <div class="custom-card">
        <h2 style='color: #4B0082; text-align: center;'>üéØ Avalia√ß√£o do Projeto </h2>
    </div>
""", unsafe_allow_html=True)

# Sele√ß√£o de avaliador
nomes_usuarios = ["Aline Oliveira","Andr√© Diniz", "Integrante SAFIN","Leonardo Briza", 
                 "Marcelo Gallo","Monica Vargas", "Patricia Testai", "Paulo Ravagnani", "Rodrigo Dib"]
avaliador = st.selectbox("**Selecione seu nome:**", nomes_usuarios, index=None, placeholder="Escolha seu nome...")

# Op√ß√£o para abster-se
if avaliador:
    abster = st.checkbox("Desejo me abster desta vota√ß√£o (minhas avalia√ß√µes ser√£o desconsideradas)")
else:
    abster = False

# Mostrar os crit√©rios apenas se n√£o estiver abstendo
if avaliador and not abster:
    # CRIT√âRIOS - PROBLEMA
    st.markdown("""
        <div class="custom-card">
            <h3 style='color: #011B70; text-align: center;'>Crit√©rios - Problema</h3>
        </div>
    """, unsafe_allow_html=True)

    col1, col2, col3 = st.columns(3)

    with col1:
        gravidade = st.slider(
            "**Gravidade do problema - Peso: 0,50**\n"
            "\nO problema √© s√©rio? Pode traver impactos relevantes se n√£o for resolvido?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Baixa gravidade | 5 = Extremamente grave"
        )

    with col2:
        urgencia = st.slider(
            "**Urg√™ncia de Solu√ß√£o do Problema - Peso: 0,30**\n"
            "\nEssa √© uma situa√ß√£o que exige a√ß√£o imediata ou pode esperar?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Baixa urg√™ncia | 5 = Muita urg√™ncia"
        )

    with col3:
        tendencia = st.slider(
            "**Tend√™ncia do Problema - Peso: 0,20**\n"
            "\nSe nada for feito, o problema tende a piorar, estagnar ou se resolver?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Baixa tend√™ncia de piora | 5 = Alta tend√™ncia de piora"
        )

    # C√°lculo da m√©dia do problema
    notas_problema = [gravidade, urgencia, tendencia]
    pesos_problema = [0.50, 0.30, 0.20]
    media_problema = calcular_media(notas_problema, pesos_problema)

    # Exibi√ß√£o com estilo
    st.markdown(f"""
        <div class="custom-card">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4 style="margin:0;">M√©dia - Problema</h4>
                <div style="font-size: 1.5rem; font-weight: bold; color: {"#28a745" if media_problema >= 3.5 else "#ffc107" if media_problema >= 2 else "#dc3545"}">
                    {media_problema:.2f}
                </div>
            </div>
            <div style="margin-top: 0.5rem;">
                <progress value="{media_problema}" max="5" style="width:100%; height:10px; border-radius:5px; color: {"#28a745" if media_problema >= 3.5 else "#ffc107" if media_problema >= 2 else "#dc3545"}"></progress>
            </div>
        </div>
    """, unsafe_allow_html=True)

    # CRIT√âRIOS - SOLU√á√ÉO
    st.markdown("""
        <div class="custom-card">
            <h3 style='color: #011B70; text-align: center;'>Crit√©rios - Solu√ß√£o</h3>
        </div>
    """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        viabilidade_solucao = st.slider(
            "**Viabilidade da Solu√ß√£o - Peso: 0,30**\n"
            "\nA proposta √© realista? Considera bem custos, prazos e riscos?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Invi√°vel | 5 = Totalmente vi√°vel"
        )

        resultados_esperados = st.slider(
            "**Resultados Esperados - Peso: 0,30**\n"
            "\nOs resultados est√£o bem descritos? S√£o mensur√°veis?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Indefinidos | 5 = Bem definidos e mensur√°veis"
        )

        impacto_solucao = st.slider(
            "**Impacto da Solu√ß√£o - Peso 0,20**\n"
            "\nA solu√ß√£o trar√° benef√≠cios concretos para o CIEE?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Baixo impacto | 5 = Alto impacto "
        )

    with col2:
        alinhamento_estrategico = st.slider(
            "**Alinhamento Estrat√©gico - Peso 0,10**\n"
            "\nConectada com planejamento estrat√©gico ou compromissos institucionais?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Sem alinhamento | 5 = Totalmente alinhado"
        )

        abrangencia = st.slider(
            "**Abrang√™ncia (P√∫blico e Territ√≥rio) - Peso: 0,10**\n"
            "\nO projeto atinge muitas pessoas/√°reas ou tem escopo limitado?",
            0.0, 5.0, 0.0, step=0.5,
            help="0 = Baixa abrang√™ncia | 5 = Alta abrang√™ncia"
        )

    # C√°lculo da m√©dia da solu√ß√£o
    notas_solucao = [viabilidade_solucao, resultados_esperados, impacto_solucao, alinhamento_estrategico, abrangencia]
    pesos_solucao = [0.30, 0.30, 0.20, 0.10, 0.10]
    media_solucao = calcular_media(notas_solucao, pesos_solucao)

    # Exibi√ß√£o com estilo
    st.markdown(f"""
        <div class="custom-card">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h4 style="margin:0;">M√©dia - Solu√ß√£o</h4>
                <div style="font-size: 1.5rem; font-weight: bold; color: {"#28a745" if media_solucao >= 3.5 else "#ffc107" if media_solucao >= 2 else "#dc3545"}">
                    {media_solucao:.2f}
                </div>
            </div>
            <div style="margin-top: 0.5rem;">
                <progress value="{media_solucao}" max="5" style="width:100%; height:10px; border-radius:5px; color: {"#28a745" if media_solucao >= 3.5 else "#ffc107" if media_solucao >= 2 else "#dc3545"}"></progress>
            </div>
        </div>
    """, unsafe_allow_html=True)

    # OBSERVA√á√ïES
    observacoes = st.text_area(
        "**Deixe sua opini√£o sobre o projeto avaliado:**",
        placeholder="Descreva aqui suas observa√ß√µes, sugest√µes ou considera√ß√µes adicionais...",
        height=200
    )

    # RESULTADO FINAL
    media_geral = calcular_media([media_problema, media_solucao], [0.50, 0.50])

    # Definir cor e status com base na m√©dia
    if media_geral < 2:
        cor_status = "#dc3545"
        status = "REPROVADO"
    elif media_geral < 3.5:
        cor_status = "#ffd900f6"
        status = "REVIS√ÉO NECESS√ÅRIA"
    else:
        cor_status = "#28a745"
        status = "APROVADO"

    st.markdown(f"""
        <div class="custom-card">
            <h3 style='text-align: center;'>Resultado Final Individual</h3>
            <div style="text-align: center; margin-bottom: 1rem;">
                <div style="font-size: 2rem; font-weight: bold; color: {cor_status};">
                    {media_geral:.2f}
                </div>
                <div style="font-size: 1.5rem; font-weight: bold; color: {cor_status}; margin-top: 0.5rem;">
                    {status}
                </div>
                <progress value="{media_geral}" max="5" style="width:80%; height:15px; border-radius:5px; margin-top:1rem;"></progress>
            </div>
        </div>
    """, unsafe_allow_html=True)

# SALVAR AVALIA√á√ÉO
col1, col2, col3 = st.columns([1, 2, 1])

with col2:
    if st.button("üíæ Salvar Avalia√ß√£o", use_container_width=True):
        if not avaliador:
            st.error("Por favor, selecione seu nome antes de salvar.")
        elif abster:
            # Se optou por abster-se, salva apenas o nome e a flag de absten√ß√£o
            dados = {
                "Avaliador": [avaliador],
                "Absten√ß√£o": ["Sim"],
                "Gravidade": [None],  # Usando None para deixar vazio
                "Urg√™ncia": [None],
                "Tend√™ncia": [None],
                "M√©dia Problema": [None],
                "Viabilidade da Solu√ß√£o": [None],
                "Resultados Esperados": [None],
                "Impacto da Solu√ß√£o": [None],
                "Alinhamento Estrat√©gico": [None],
                "Abrang√™ncia": [None],
                "M√©dia Solu√ß√£o": [None],
                "M√©dia Final": [None],
                "Observa√ß√£o": ["Avaliador optou por abster-se"]
            }
            
            df = pd.DataFrame(dados)
            arquivo = "avaliacoes01.xlsx"

            if os.path.exists(arquivo):
                df_existente = pd.read_excel(arquivo)
                if avaliador in df_existente["Avaliador"].values:
                    st.error("Este avaliador j√° preencheu a avalia√ß√£o. Cada avaliador s√≥ pode avaliar cada projeto uma vez.")
                else:
                    df = pd.concat([df_existente, df], ignore_index=True)
                    df.to_excel(arquivo, index=False)
                    st.success("‚úÖ Absten√ß√£o registrada com sucesso!")
            else:
                df.to_excel(arquivo, index=False)
                st.success("‚úÖ Absten√ß√£o registrada com sucesso!")
                
        elif 'media_geral' not in locals():
            st.error("Por favor, preencha todos os crit√©rios de avalia√ß√£o.")
        else:
            # C√≥digo original para salvar avalia√ß√£o normal
            dados = {
                "Avaliador": [avaliador],
                "Absten√ß√£o": ["N√£o"],
                "Gravidade": [gravidade],
                "Urg√™ncia": [urgencia],
                "Tend√™ncia": [tendencia],
                "M√©dia Problema": [media_problema],
                "Viabilidade da Solu√ß√£o": [viabilidade_solucao],
                "Resultados Esperados": [resultados_esperados],
                "Impacto da Solu√ß√£o": [impacto_solucao],
                "Alinhamento Estrat√©gico": [alinhamento_estrategico],
                "Abrang√™ncia": [abrangencia],
                "M√©dia Solu√ß√£o": [media_solucao],
                "M√©dia Final": [media_geral],
                "Observa√ß√£o": [observacoes]
            }

            df = pd.DataFrame(dados)
            arquivo = "avaliacoes01.xlsx"

            if os.path.exists(arquivo):
                df_existente = pd.read_excel(arquivo)
                if avaliador in df_existente["Avaliador"].values:
                    st.error("Este avaliador j√° preencheu a avalia√ß√£o. Cada avaliador s√≥ pode avaliar cada projeto uma vez.")
                else:
                    df = pd.concat([df_existente, df], ignore_index=True)
                    df.to_excel(arquivo, index=False)
                    st.success("‚úÖ Avalia√ß√£o salva com sucesso!")
            else:
                df.to_excel(arquivo, index=False)
                st.success("‚úÖ Avalia√ß√£o salva com sucesso!")



# RODAP√â
st.markdown("---")
st.markdown("""
    <div style="text-align: center; color: #6c757d; font-size: 0.9rem;">
        CIP - Central de Intelig√™ncia de Projetos | Vers√£o 2.0
    </div>
""", unsafe_allow_html=True)